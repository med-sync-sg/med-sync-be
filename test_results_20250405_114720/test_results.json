{"report": {"environment": {"Python": "3.10.0", "Platform": "Windows-10-10.0.26100-SP0"}, "tests": [{"name": "tests/integration/test_error_rates.py::test_error_rates[case0]", "duration": 0.2685607998864725, "run_index": 0, "setup": {"name": "setup", "duration": 0.1341221999609843, "outcome": "error", "longrepr": "file D:\\medsync\\med_sync_be\\tests\\integration\\test_error_rates.py, line 14\n  @pytest.mark.parametrize(\"case\", correct_data)\n  def test_error_rates(client, case):\nE       fixture 'client' not found\n>       available fixtures: anyio_backend, anyio_backend_name, anyio_backend_options, auth_headers, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, db_session, doctest_namespace, json_environment, json_report_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\nD:\\medsync\\med_sync_be\\tests\\integration\\test_error_rates.py:14"}, "teardown": {"name": "teardown", "duration": 0.0003163999645039439, "outcome": "passed"}, "outcome": "error"}, {"name": "tests/integration/test_error_rates.py::test_error_rates[case1]", "duration": 0.0013544000685214996, "run_index": 1, "setup": {"name": "setup", "duration": 0.0005258000455796719, "outcome": "error", "longrepr": "file D:\\medsync\\med_sync_be\\tests\\integration\\test_error_rates.py, line 14\n  @pytest.mark.parametrize(\"case\", correct_data)\n  def test_error_rates(client, case):\nE       fixture 'client' not found\n>       available fixtures: anyio_backend, anyio_backend_name, anyio_backend_options, auth_headers, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, db_session, doctest_namespace, json_environment, json_report_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\nD:\\medsync\\med_sync_be\\tests\\integration\\test_error_rates.py:14"}, "teardown": {"name": "teardown", "duration": 0.0003027999773621559, "outcome": "passed"}, "outcome": "error"}, {"name": "tests/integration/test_error_rates.py::test_error_rates[case2]", "duration": 0.0011264997301623225, "run_index": 2, "setup": {"name": "setup", "duration": 0.00038679991848766804, "outcome": "error", "longrepr": "file D:\\medsync\\med_sync_be\\tests\\integration\\test_error_rates.py, line 14\n  @pytest.mark.parametrize(\"case\", correct_data)\n  def test_error_rates(client, case):\nE       fixture 'client' not found\n>       available fixtures: anyio_backend, anyio_backend_name, anyio_backend_options, auth_headers, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, db_session, doctest_namespace, json_environment, json_report_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\nD:\\medsync\\med_sync_be\\tests\\integration\\test_error_rates.py:14"}, "teardown": {"name": "teardown", "duration": 0.00035289989318698645, "outcome": "passed"}, "outcome": "error"}, {"name": "tests/integration/test_error_rates.py::test_error_rates[case3]", "duration": 0.0016960997600108385, "run_index": 3, "setup": {"name": "setup", "duration": 0.0006318999221548438, "outcome": "error", "longrepr": "file D:\\medsync\\med_sync_be\\tests\\integration\\test_error_rates.py, line 14\n  @pytest.mark.parametrize(\"case\", correct_data)\n  def test_error_rates(client, case):\nE       fixture 'client' not found\n>       available fixtures: anyio_backend, anyio_backend_name, anyio_backend_options, auth_headers, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, db_session, doctest_namespace, json_environment, json_report_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\nD:\\medsync\\med_sync_be\\tests\\integration\\test_error_rates.py:14"}, "teardown": {"name": "teardown", "duration": 0.0004322999157011509, "outcome": "passed"}, "outcome": "error"}, {"name": "tests/integration/test_error_rates.py::test_error_rates[case4]", "duration": 0.001342400093562901, "run_index": 4, "setup": {"name": "setup", "duration": 0.0004610000178217888, "outcome": "error", "longrepr": "file D:\\medsync\\med_sync_be\\tests\\integration\\test_error_rates.py, line 14\n  @pytest.mark.parametrize(\"case\", correct_data)\n  def test_error_rates(client, case):\nE       fixture 'client' not found\n>       available fixtures: anyio_backend, anyio_backend_name, anyio_backend_options, auth_headers, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, db_session, doctest_namespace, json_environment, json_report_path, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\nD:\\medsync\\med_sync_be\\tests\\integration\\test_error_rates.py:14"}, "teardown": {"name": "teardown", "duration": 0.00042040005791932344, "outcome": "passed"}, "outcome": "error"}], "summary": {"error": 5, "num_tests": 5, "duration": 0.7066988945007324}, "created_at": "2025-04-05 11:48:11.116746"}}